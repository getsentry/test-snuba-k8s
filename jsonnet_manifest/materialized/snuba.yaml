apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app_feature: something
    app_function: storage
    component: admin
    service: snuba
    subsystem: null
    system: kafka_consumer
  name: snuba-admin
  namespace: snuba-jsonnet
spec:
  minReadySeconds: 5
  replicas: 1
  selector:
    matchLabels:
      component: admin
      service: snuba
  strategy:
    rollingUpdate:
      maxSurge: 100
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        configVersion: 1b6513a9eaebcd3a0cd7523829ea7cdb
      labels:
        app_feature: something
        app_function: storage
        component: admin
        service: snuba
        subsystem: null
        system: kafka_consumer
    spec:
      containers:
        - args:
            - admin
            - --processes=3
            - --threads=4
          env:
            - name: CLICKHOUSE_MIGRATIONS_USER
              value: snuba
            - name: ENVOY_ADMIN_PORT
              value: "15000"
            - name: SENTRY_ENVIRONMENT
              value: st-mystuff
            - name: SNUBA_PROFILES_SAMPLE_RATE
              value: "1.0"
            - name: SNUBA_SETTINGS
              value: /etc/snuba.conf.py
            - name: UWSGI_DIE_ON_TERM
              value: "true"
            - name: UWSGI_DISABLE_LOGGING
              value: "true"
            - name: UWSGI_DISABLE_WRITE_EXCEPTION
              value: "true"
            - name: UWSGI_ENABLE_THREADS
              value: "true"
            - name: UWSGI_HTTP_SOCKET
              value: 0.0.0.0:8000
            - name: UWSGI_IGNORE_SIGPIPE
              value: "true"
            - name: UWSGI_IGNORE_WRITE_ERRORS
              value: "true"
            - name: UWSGI_MAX_REQUESTS
              value: "10000"
            - name: UWSGI_NEED_APP
              value: "true"
          image: us.gcr.io/sentryio/snuba:92816dfc25a17de2dccd3df68a86d8de2871bfc8
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -ec
                  - touch /tmp/snuba.down && sleep 40
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
          name: snuba-admin
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              cpu: 5000m
              memory: 5Gi
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /etc/snuba.conf.py
              name: snuba-config
              readOnly: true
              subPath: snuba.conf.py
      serviceAccountName: snuba-admin
      terminationGracePeriodSeconds: 40
      volumes:
        - configMap:
            items:
              - key: snuba.conf.py
                path: snuba.conf.py
            name: snuba
          name: snuba-config
        - emptyDir:
            medium: Memory
          name: dshm
        - emptyDir: {}
          name: envoy-bootstrap-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: snuba-admin
  name: snuba-admin
  namespace: snuba-jsonnet
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    service: snuba-admin
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snuba-admin
  namespace: snuba-jsonnet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app_feature: something
    app_function: storage
    component: api
    service: snuba
    subsystem: null
    system: kafka_consumer
  name: snuba-api
  namespace: snuba-jsonnet
spec:
  minReadySeconds: 5
  replicas: 1
  selector:
    matchLabels:
      component: api
      service: snuba
  strategy:
    rollingUpdate:
      maxSurge: 100
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        configVersion: 1b6513a9eaebcd3a0cd7523829ea7cdb
      labels:
        app_feature: something
        app_function: storage
        component: api
        service: snuba
        subsystem: null
        system: kafka_consumer
    spec:
      containers:
        - args:
            - api
            - --processes=3
            - --threads=4
          env:
            - name: CLICKHOUSE_MIGRATIONS_USER
              value: snuba
            - name: ENVOY_ADMIN_PORT
              value: "15000"
            - name: SENTRY_ENVIRONMENT
              value: st-mystuff
            - name: SNUBA_PROFILES_SAMPLE_RATE
              value: "1.0"
            - name: SNUBA_SETTINGS
              value: /etc/snuba.conf.py
            - name: UWSGI_DIE_ON_TERM
              value: "true"
            - name: UWSGI_DISABLE_LOGGING
              value: "true"
            - name: UWSGI_DISABLE_WRITE_EXCEPTION
              value: "true"
            - name: UWSGI_ENABLE_THREADS
              value: "true"
            - name: UWSGI_HTTP_SOCKET
              value: 0.0.0.0:1218
            - name: UWSGI_IGNORE_SIGPIPE
              value: "true"
            - name: UWSGI_IGNORE_WRITE_ERRORS
              value: "true"
            - name: UWSGI_MAX_REQUESTS
              value: "10000"
            - name: UWSGI_NEED_APP
              value: "true"
          image: us.gcr.io/sentryio/snuba:92816dfc25a17de2dccd3df68a86d8de2871bfc8
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -ec
                  - touch /tmp/snuba.down && sleep 40
          livenessProbe:
            httpGet:
              path: /health
              port: 1218
            initialDelaySeconds: 10
            periodSeconds: 10
          name: snuba-api
          ports:
            - containerPort: 1218
          readinessProbe:
            httpGet:
              path: /health
              port: 1218
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              cpu: 5000m
              memory: 5Gi
          startupProbe:
            httpGet:
              path: /health
              port: 1218
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /etc/snuba.conf.py
              name: snuba-config
              readOnly: true
              subPath: snuba.conf.py
      serviceAccountName: snuba-api
      terminationGracePeriodSeconds: 40
      volumes:
        - configMap:
            items:
              - key: snuba.conf.py
                path: snuba.conf.py
            name: snuba
          name: snuba-config
        - emptyDir:
            medium: Memory
          name: dshm
        - emptyDir: {}
          name: envoy-bootstrap-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: snuba-api
  name: snuba-api
  namespace: snuba-jsonnet
spec:
  ports:
    - port: 1218
      targetPort: 1218
  selector:
    service: snuba-api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snuba-api
  namespace: snuba-jsonnet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app_feature: something
    app_function: storage
    component: errors
    service: snuba
    subsystem: null
    system: kafka_consumer
  name: snuba-errors
  namespace: snuba-jsonnet
spec:
  minReadySeconds: 5
  replicas: 1
  selector:
    matchLabels:
      component: errors
      service: snuba
  strategy:
    rollingUpdate:
      maxSurge: 100
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        configVersion: 1b6513a9eaebcd3a0cd7523829ea7cdb
      labels:
        app_feature: something
        app_function: storage
        component: errors
        service: snuba
        subsystem: null
        system: kafka_consumer
    spec:
      containers:
        - args:
            - rust-consumer
            - --storage
            - errors
            - --consumer-group
            - snuba-consumers
            - --max-batch-time-ms
            - "1100"
            - --concurrency
            - "4"
            - --auto-offset-reset
            - earliest
            - --no-strict-offset-reset
          env:
            - name: CLICKHOUSE_MIGRATIONS_USER
              value: snuba
            - name: ENVOY_ADMIN_PORT
              value: "15000"
            - name: SENTRY_ENVIRONMENT
              value: st-mystuff
            - name: SNUBA_PROFILES_SAMPLE_RATE
              value: "1.0"
            - name: SNUBA_SETTINGS
              value: /etc/snuba.conf.py
            - name: UWSGI_DIE_ON_TERM
              value: "true"
            - name: UWSGI_DISABLE_LOGGING
              value: "true"
            - name: UWSGI_DISABLE_WRITE_EXCEPTION
              value: "true"
            - name: UWSGI_ENABLE_THREADS
              value: "true"
            - name: UWSGI_HTTP_SOCKET
              value: 0.0.0.0:null
            - name: UWSGI_IGNORE_SIGPIPE
              value: "true"
            - name: UWSGI_IGNORE_WRITE_ERRORS
              value: "true"
            - name: UWSGI_MAX_REQUESTS
              value: "10000"
            - name: UWSGI_NEED_APP
              value: "true"
          image: us.gcr.io/sentryio/snuba:92816dfc25a17de2dccd3df68a86d8de2871bfc8
          name: snuba-errors
          resources:
            requests:
              cpu: 4000m
              memory: 4Gi
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /etc/snuba.conf.py
              name: snuba-config
              readOnly: true
              subPath: snuba.conf.py
      serviceAccountName: snuba-errors
      terminationGracePeriodSeconds: 40
      volumes:
        - configMap:
            items:
              - key: snuba.conf.py
                path: snuba.conf.py
            name: snuba
          name: snuba-config
        - emptyDir:
            medium: Memory
          name: dshm
        - emptyDir: {}
          name: envoy-bootstrap-data
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snuba-errors
  namespace: snuba-jsonnet
---
apiVersion: v1
data:
  snuba.conf.py: |
    import os

    DEBUG = False
    SENTRY_DSN = None

    # Query Specifics
    CLUSTERS = [
        {
        'host': 'clickhouse-001',
        'port': 9000,
        'http_port': 8123,
        'storage_sets': {
            "cdc",
            "discover",
            "events",
            "events_ro",
            "metrics",
            "migrations",
            "outcomes",
            "querylog",
            "sessions",
            "transactions",
            "profiles",
            "functions",
            "replays",
            "generic_metrics_sets",
            "generic_metrics_distributions",
            "search_issues",
            "generic_metrics_counters",
            "spans",
            "group_attributes",
            "generic_metrics_gauges",
            "metrics_summaries",
            "profile_chunks",
        },
        'single_node': True,
        },
    ]

    # Clickhouse migrations to be skipped.
    SKIPPED_MIGRATION_GROUPS = {
        'querylog',
        'test_migration',
    }

    # Capacity Management
    ENFORCE_BYTES_SCANNED_WINDOW_POLICY = False

    CLICKHOUSE_READONLY_USER = os.environ.get('CLICKHOUSE_READONLY_USER', 'default')
    CLICKHOUSE_READONLY_PASSWORD = os.environ.get('CLICKHOUSE_READONLY_PASSWORD', '')

    CLICKHOUSE_TRACE_USER = os.environ.get('CLICKHOUSE_TRACE_USER', 'default')
    CLICKHOUSE_TRACE_PASSWORD = os.environ.get('CLICKHOUSE_TRACE_PASSWORD', '')


    DEFAULT_MAX_BATCH_SIZE = 50000
    DEFAULT_MAX_BATCH_TIME_MS = 1000
    DEFAULT_QUEUED_MAX_MESSAGE_KBYTES = 50000
    DEFAULT_QUEUED_MIN_MESSAGES = 20000

    # Put query stats back into Clickhouse.
    RECORD_QUERIES = True

    # Record COGS in generic metrics consumer.
    RECORD_COGS = False

    # Always add these keys to PREWHERE filters to stop reading extra data.
    PREWHERE_KEYS = ['event_id', 'issue', 'tags[sentry:release]', 'message', 'environment', 'project_id']

    BROKER_CONFIG = {
        'bootstrap.servers': 'kafka-001:9092'
    }

    REDIS_HOST = '10.225.239.107'
    REDIS_PORT = 6379
    USE_REDIS_CLUSTER = False

    RATE_LIMIT_CLUSTER = None

    REDIS_CLUSTERS = {
        "cache": None,
        "rate_limiter": RATE_LIMIT_CLUSTER,
        "subscription_store": None,
        "replacements_store": None,
        "config": None,
        "dlq": None,
        "optimize": None,
        "admin_auth": None,
    }

    # replacer settings
    REPLACER_MAX_MEMORY_USAGE = 50 * (1024**3) # 50GB
    REPLACER_KEY_TTL = 1
    REPLACER_IMMEDIATE_OPTIMIZE = True

    CONFIG_STATE = {'use_readthrough_query_cache': 1, 'cache_expiry_sec': 500, 'query_settings/max_threads': 12, 'query_settings/max_memory_usage': 20000000000, 'query_settings/prefer_localhost_replica': 0}

    TOPIC_PARTITION_COUNTS = {
        'events': 1,
        'transactions': 1,
        'ingest-metrics': 1,
        'ingest-performance-metrics': 1,
    }

    ADMIN_REGIONS = ["s4s", "de", "disney", "geico", "goldmansachs", "ly", "zendesk-eu"]
kind: ConfigMap
metadata:
  labels:
    component: configmap
    service: snuba
  name: snuba
  namespace: snuba-jsonnet
---
